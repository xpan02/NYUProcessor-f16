Release 14.7 - xst P.20131013 (nt)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.09 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.09 secs
 
--> Reading design: cpufpga.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "cpufpga.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "cpufpga"
Output Format                      : NGC
Target Device                      : xc7a100t-3-csg324

---- Source Options
Top Module Name                    : cpufpga
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 32
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\Program_Counter.vhd" into library work
Parsing entity <Program_Counter>.
Parsing architecture <Behavioral> of entity <program_counter>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\MUX.vhd" into library work
Parsing entity <MUX>.
Parsing architecture <Behavioral> of entity <mux>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\InstructionMemory.vhd" into library work
Parsing entity <InstructionMemory>.
Parsing architecture <Behavioral> of entity <instructionmemory>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\ADDER.vhd" into library work
Parsing entity <ADDER>.
Parsing architecture <Behavioral> of entity <adder>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\RegisterFile.vhd" into library work
Parsing entity <RegisterFile>.
Parsing architecture <Behavioral> of entity <registerfile>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\Instruction_Fetch.vhd" into library work
Parsing entity <Instruction_Fetch>.
Parsing architecture <Behavioral> of entity <instruction_fetch>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\DataMemory.vhd" into library work
Parsing entity <DataMemory>.
Parsing architecture <Behavioral> of entity <datamemory>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\control_unit.vhd" into library work
Parsing entity <control_unit>.
Parsing architecture <Behavioral> of entity <control_unit>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\ALU.vhd" into library work
Parsing entity <ALU>.
Parsing architecture <Behavioral> of entity <alu>.
Parsing VHDL file "C:\NYU VHDL\NYU_6463_Processor\cpu.vhd" into library work
Parsing entity <cpu>.
Parsing architecture <BehavioraL> of entity <cpu>.
Parsing VHDL file "C:\NYU VHDL\cpufpga\cpufpga.vhd" into library work
Parsing entity <cpufpga>.
Parsing architecture <Behavioral> of entity <cpufpga>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating entity <cpufpga> (architecture <Behavioral>) from library <work>.

Elaborating entity <cpu> (architecture <BehavioraL>) from library <work>.

Elaborating entity <DataMemory> (architecture <Behavioral>) from library <work>.

Elaborating entity <Instruction_Fetch> (architecture <Behavioral>) from library <work>.
WARNING:HDLCompiler:1127 - "C:\NYU VHDL\NYU_6463_Processor\Instruction_Fetch.vhd" Line 94: Assignment to jumpimm ignored, since the identifier is never used

Elaborating entity <Program_Counter> (architecture <Behavioral>) from library <work>.

Elaborating entity <InstructionMemory> (architecture <Behavioral>) from library <work>.
WARNING:HDLCompiler:634 - "C:\NYU VHDL\NYU_6463_Processor\InstructionMemory.vhd" Line 57: Net <imem[0][31]> does not have a driver.

Elaborating entity <ADDER> (architecture <Behavioral>) from library <work>.

Elaborating entity <MUX> (architecture <Behavioral>) from library <work>.

Elaborating entity <control_unit> (architecture <Behavioral>) from library <work>.

Elaborating entity <ALU> (architecture <Behavioral>) from library <work>.

Elaborating entity <RegisterFile> (architecture <Behavioral>) from library <work>.
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 312. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 335. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 358. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 381. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 404. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 427. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 450. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 474. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 497. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 520. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 543. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 566. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 589. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 612. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 635. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 659. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 683. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 706. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 729. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 752. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 775. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 798. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 821. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 845. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 868. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 891. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 914. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 937. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 960. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 983. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1006. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1030. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1053. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1076. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1099. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1122. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1145. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1168. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1191. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1215. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1238. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1261. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1284. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1307. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1330. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1353. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1376. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1400. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1423. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1446. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1469. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1492. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1515. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1538. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1561. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1585. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1608. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1631. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1654. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1677. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1700. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1723. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1746. Case statement is complete. others clause is never selected
INFO:HDLCompiler:679 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" Line 1770. Case statement is complete. others clause is never selected

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <cpufpga>.
    Related source file is "C:\NYU VHDL\cpufpga\cpufpga.vhd".
WARNING:Xst:647 - Input <btnU> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <btnD> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
INFO:Xst:3210 - "C:\NYU VHDL\cpufpga\cpufpga.vhd" line 166: Output port <instruction> of the instance <cpuall> is unconnected or connected to loadless signal.
    Found 1-bit register for signal <dp>.
    Found 7-bit register for signal <seg>.
    Found 1-bit register for signal <clk_de>.
    Found 7-bit register for signal <i>.
    Found 6-bit register for signal <j>.
    Found 128-bit register for signal <input1>.
    Found 64-bit register for signal <input2>.
    Found 16-bit register for signal <counter>.
    Found 8-bit register for signal <an>.
    Found 20-bit register for signal <clk_de_counter>.
    Found 1-bit register for signal <i_min>.
    Found 1-bit register for signal <i_add>.
    Found 1-bit register for signal <j_min>.
    Found 1-bit register for signal <j_add>.
    Found 20-bit adder for signal <clk_de_counter[19]_GND_5_o_add_5_OUT> created at line 177.
    Found 7-bit adder for signal <i[6]_GND_5_o_add_9_OUT> created at line 191.
    Found 6-bit adder for signal <j[5]_GND_5_o_add_15_OUT> created at line 207.
    Found 16-bit adder for signal <counter[15]_GND_5_o_add_95_OUT> created at line 1790.
    Found 7-bit subtractor for signal <GND_5_o_GND_5_o_sub_11_OUT<6:0>> created at line 193.
    Found 6-bit subtractor for signal <GND_5_o_GND_5_o_sub_17_OUT<5:0>> created at line 209.
    Found 16x8-bit Read Only RAM for signal <dig1>
    Found 16x8-bit Read Only RAM for signal <dig2>
    Found 16x8-bit Read Only RAM for signal <dig3>
    Found 16x8-bit Read Only RAM for signal <dig4>
    Found 16x8-bit Read Only RAM for signal <dig5>
    Found 16x8-bit Read Only RAM for signal <dig6>
    Found 16x8-bit Read Only RAM for signal <dig7>
    Found 16x8-bit Read Only RAM for signal <dig8>
    Found 16x8-bit Read Only RAM for signal <dig9>
    Found 16x8-bit Read Only RAM for signal <dig10>
    Found 16x8-bit Read Only RAM for signal <dig11>
    Found 16x8-bit Read Only RAM for signal <dig12>
    Found 16x8-bit Read Only RAM for signal <dig13>
    Found 16x8-bit Read Only RAM for signal <dig14>
    Found 16x8-bit Read Only RAM for signal <dig15>
    Found 16x8-bit Read Only RAM for signal <dig16>
    Found 16x8-bit Read Only RAM for signal <dig17>
    Found 16x8-bit Read Only RAM for signal <dig18>
    Found 16x8-bit Read Only RAM for signal <dig19>
    Found 16x8-bit Read Only RAM for signal <dig20>
    Found 16x8-bit Read Only RAM for signal <dig21>
    Found 16x8-bit Read Only RAM for signal <dig22>
    Found 16x8-bit Read Only RAM for signal <dig23>
    Found 16x8-bit Read Only RAM for signal <dig24>
    Found 16x8-bit Read Only RAM for signal <dig25>
    Found 16x8-bit Read Only RAM for signal <dig26>
    Found 16x8-bit Read Only RAM for signal <dig27>
    Found 16x8-bit Read Only RAM for signal <dig28>
    Found 16x8-bit Read Only RAM for signal <dig29>
    Found 16x8-bit Read Only RAM for signal <dig30>
    Found 16x8-bit Read Only RAM for signal <dig31>
    Found 16x8-bit Read Only RAM for signal <dig32>
    Found 16x8-bit Read Only RAM for signal <di1>
    Found 16x8-bit Read Only RAM for signal <di2>
    Found 16x8-bit Read Only RAM for signal <di3>
    Found 16x8-bit Read Only RAM for signal <di4>
    Found 16x8-bit Read Only RAM for signal <di5>
    Found 16x8-bit Read Only RAM for signal <di6>
    Found 16x8-bit Read Only RAM for signal <di7>
    Found 16x8-bit Read Only RAM for signal <di8>
    Found 16x8-bit Read Only RAM for signal <di9>
    Found 16x8-bit Read Only RAM for signal <di10>
    Found 16x8-bit Read Only RAM for signal <di11>
    Found 16x8-bit Read Only RAM for signal <di12>
    Found 16x8-bit Read Only RAM for signal <di13>
    Found 16x8-bit Read Only RAM for signal <di14>
    Found 16x8-bit Read Only RAM for signal <di15>
    Found 16x8-bit Read Only RAM for signal <di16>
    Found 7-bit 4-to-1 multiplexer for signal <PWR_5_o_PWR_5_o_mux_147_OUT> created at line 1801.
WARNING:Xst:737 - Found 1-bit latch for signal <output<63>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<62>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<61>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<60>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<59>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<58>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<57>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<56>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<55>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<54>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<53>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<52>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<51>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<50>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<49>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<48>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<47>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<46>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<45>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<44>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<43>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<42>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<41>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<40>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<39>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<38>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<37>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<36>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<35>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<34>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<33>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<32>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <output<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Found 20-bit comparator greater for signal <n0008> created at line 173
    Summary:
	inferred  48 RAM(s).
	inferred   4 Adder/Subtractor(s).
	inferred 262 D-type flip-flop(s).
	inferred  64 Latch(s).
	inferred   1 Comparator(s).
	inferred  56 Multiplexer(s).
Unit <cpufpga> synthesized.

Synthesizing Unit <cpu>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\cpu.vhd".
INFO:Xst:3210 - "C:\NYU VHDL\NYU_6463_Processor\cpu.vhd" line 166: Output port <PCSrc> of the instance <CtrlUn> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "C:\NYU VHDL\NYU_6463_Processor\cpu.vhd" line 166: Output port <shiftl> of the instance <CtrlUn> is unconnected or connected to loadless signal.
INFO:Xst:3210 - "C:\NYU VHDL\NYU_6463_Processor\cpu.vhd" line 166: Output port <shiftr> of the instance <CtrlUn> is unconnected or connected to loadless signal.
    Summary:
	inferred   3 Multiplexer(s).
Unit <cpu> synthesized.

Synthesizing Unit <DataMemory>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\DataMemory.vhd".
WARNING:Xst:647 - Input <address<31:5>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <rdmemen> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 32x32-bit single-port RAM <Mram_datamem> for signal <datamem>.
    Summary:
	inferred   1 RAM(s).
Unit <DataMemory> synthesized.

Synthesizing Unit <Instruction_Fetch>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\Instruction_Fetch.vhd".
    Summary:
	no macro.
Unit <Instruction_Fetch> synthesized.

Synthesizing Unit <Program_Counter>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\Program_Counter.vhd".
    Found 32-bit register for signal <output>.
    Summary:
	inferred  32 D-type flip-flop(s).
Unit <Program_Counter> synthesized.

Synthesizing Unit <InstructionMemory>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\InstructionMemory.vhd".
WARNING:Xst:647 - Input <address<31:8>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:2935 - Signal 'imem<0>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000000100000010000).
WARNING:Xst:2935 - Signal 'imem<1>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000001000000010000).
WARNING:Xst:2935 - Signal 'imem<2>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000001100000010000).
WARNING:Xst:2935 - Signal 'imem<4>', unconnected in block 'InstructionMemory', is tied to its initial value (00010111110111100000000000010000).
WARNING:Xst:2935 - Signal 'imem<6>', unconnected in block 'InstructionMemory', is tied to its initial value (00000011110111011111000000010000).
WARNING:Xst:2935 - Signal 'imem<7>', unconnected in block 'InstructionMemory', is tied to its initial value (00100000000111100000000000011010).
WARNING:Xst:2935 - Signal 'imem<9>', unconnected in block 'InstructionMemory', is tied to its initial value (00010111110111100000000000010000).
WARNING:Xst:2935 - Signal 'imem<11>', unconnected in block 'InstructionMemory', is tied to its initial value (00000011110111011111000000010000).
WARNING:Xst:2935 - Signal 'imem<12>', unconnected in block 'InstructionMemory', is tied to its initial value (00100000000111100000000000011011).
WARNING:Xst:2935 - Signal 'imem<14>', unconnected in block 'InstructionMemory', is tied to its initial value (00010111110111100000000000010000).
WARNING:Xst:2935 - Signal 'imem<16>', unconnected in block 'InstructionMemory', is tied to its initial value (00000011110111011111000000010000).
WARNING:Xst:2935 - Signal 'imem<17>', unconnected in block 'InstructionMemory', is tied to its initial value (00100000000111100000000000011100).
WARNING:Xst:2935 - Signal 'imem<19>', unconnected in block 'InstructionMemory', is tied to its initial value (00010111110111100000000000010000).
WARNING:Xst:2935 - Signal 'imem<21>', unconnected in block 'InstructionMemory', is tied to its initial value (00000011110111011111000000010000).
WARNING:Xst:2935 - Signal 'imem<22>', unconnected in block 'InstructionMemory', is tied to its initial value (00100000000111100000000000011101).
WARNING:Xst:2935 - Signal 'imem<23>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100000101010000000000000100).
WARNING:Xst:2935 - Signal 'imem<24>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100000101100000000000011010).
WARNING:Xst:2935 - Signal 'imem<25>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100000101110000000001001110).
WARNING:Xst:2935 - Signal 'imem<26>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000010000000010000).
WARNING:Xst:2935 - Signal 'imem<27>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000010100000010000).
WARNING:Xst:2935 - Signal 'imem<28>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100010010000000000000000000).
WARNING:Xst:2935 - Signal 'imem<29>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100001010010000000000011010).
WARNING:Xst:2935 - Signal 'imem<30>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100001010011000000010000).
WARNING:Xst:2935 - Signal 'imem<31>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001000001100101000000010000).
WARNING:Xst:2935 - Signal 'imem<32>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100000010110000000000000011).
WARNING:Xst:2935 - Signal 'imem<33>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000110000000010000).
WARNING:Xst:2935 - Signal 'imem<34>', unconnected in block 'InstructionMemory', is tied to its initial value (00101001011011000000000000000101).
WARNING:Xst:2935 - Signal 'imem<35>', unconnected in block 'InstructionMemory', is tied to its initial value (00010101010011010000000000000001).
WARNING:Xst:2935 - Signal 'imem<36>', unconnected in block 'InstructionMemory', is tied to its initial value (00011001010011100000000000011111).
WARNING:Xst:2935 - Signal 'imem<37>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001101011100101000000010000).
WARNING:Xst:2935 - Signal 'imem<38>', unconnected in block 'InstructionMemory', is tied to its initial value (00000101100011000000000000000001).
WARNING:Xst:2935 - Signal 'imem<39>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000000100010).
WARNING:Xst:2935 - Signal 'imem<40>', unconnected in block 'InstructionMemory', is tied to its initial value (00100000010010100000000000000000).
WARNING:Xst:2935 - Signal 'imem<41>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000010100010000000010000).
WARNING:Xst:2935 - Signal 'imem<42>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100001010011000000010000).
WARNING:Xst:2935 - Signal 'imem<43>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001001001100101000000010000).
WARNING:Xst:2935 - Signal 'imem<44>', unconnected in block 'InstructionMemory', is tied to its initial value (00001100110010110000000000011111).
WARNING:Xst:2935 - Signal 'imem<45>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000110000000010000).
WARNING:Xst:2935 - Signal 'imem<46>', unconnected in block 'InstructionMemory', is tied to its initial value (00101001011011000000000000000101).
WARNING:Xst:2935 - Signal 'imem<47>', unconnected in block 'InstructionMemory', is tied to its initial value (00010101010011010000000000000001).
WARNING:Xst:2935 - Signal 'imem<48>', unconnected in block 'InstructionMemory', is tied to its initial value (00011001010011100000000000011111).
WARNING:Xst:2935 - Signal 'imem<49>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001101011100101000000010000).
WARNING:Xst:2935 - Signal 'imem<50>', unconnected in block 'InstructionMemory', is tied to its initial value (00000101100011000000000000000001).
WARNING:Xst:2935 - Signal 'imem<51>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000000101110).
WARNING:Xst:2935 - Signal 'imem<52>', unconnected in block 'InstructionMemory', is tied to its initial value (00100000001010100000000000011010).
WARNING:Xst:2935 - Signal 'imem<53>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000010100010100000010000).
WARNING:Xst:2935 - Signal 'imem<54>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100001000010000000000000001).
WARNING:Xst:2935 - Signal 'imem<55>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100010000100000000000000001).
WARNING:Xst:2935 - Signal 'imem<56>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100011000110000000000000001).
WARNING:Xst:2935 - Signal 'imem<57>', unconnected in block 'InstructionMemory', is tied to its initial value (00101100001101010000000000000001).
WARNING:Xst:2935 - Signal 'imem<58>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000000100000010000).
WARNING:Xst:2935 - Signal 'imem<59>', unconnected in block 'InstructionMemory', is tied to its initial value (00101100010101100000000000000001).
WARNING:Xst:2935 - Signal 'imem<60>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000001000000010000).
WARNING:Xst:2935 - Signal 'imem<61>', unconnected in block 'InstructionMemory', is tied to its initial value (00101000011101110000000000000001).
WARNING:Xst:2935 - Signal 'imem<62>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000000011100).
WARNING:Xst:2935 - Signal 'imem<63>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000001100000010000).
WARNING:Xst:2935 - Signal 'imem<64>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100000111100000000000011010).
WARNING:Xst:2935 - Signal 'imem<65>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000010000000010000).
WARNING:Xst:2935 - Signal 'imem<66>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000010100000010000).
WARNING:Xst:2935 - Signal 'imem<68>', unconnected in block 'InstructionMemory', is tied to its initial value (00010100100001000000000000010000).
WARNING:Xst:2935 - Signal 'imem<70>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100111010010000000010000).
WARNING:Xst:2935 - Signal 'imem<72>', unconnected in block 'InstructionMemory', is tied to its initial value (00010100101001010000000000010000).
WARNING:Xst:2935 - Signal 'imem<74>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101111010010100000010000).
WARNING:Xst:2935 - Signal 'imem<75>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011111110000000000000000).
WARNING:Xst:2935 - Signal 'imem<76>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100111110010000000010000).
WARNING:Xst:2935 - Signal 'imem<77>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011111110000000000000001).
WARNING:Xst:2935 - Signal 'imem<78>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101111110010100000010000).
WARNING:Xst:2935 - Signal 'imem<79>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100011000110000000000000010).
WARNING:Xst:2935 - Signal 'imem<80>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100000000011000000010100).
WARNING:Xst:2935 - Signal 'imem<81>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101000000011100000010100).
WARNING:Xst:2935 - Signal 'imem<82>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100001110011100000010010).
WARNING:Xst:2935 - Signal 'imem<83>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101001100011000000010010).
WARNING:Xst:2935 - Signal 'imem<84>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000110001110100000000010000).
WARNING:Xst:2935 - Signal 'imem<85>', unconnected in block 'InstructionMemory', is tied to its initial value (00001100101001110000000000011111).
WARNING:Xst:2935 - Signal 'imem<86>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000011000000010000).
WARNING:Xst:2935 - Signal 'imem<87>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000010000100100000010000).
WARNING:Xst:2935 - Signal 'imem<88>', unconnected in block 'InstructionMemory', is tied to its initial value (00101000110001110000000000000101).
WARNING:Xst:2935 - Signal 'imem<89>', unconnected in block 'InstructionMemory', is tied to its initial value (00010101001010100000000000000001).
WARNING:Xst:2935 - Signal 'imem<90>', unconnected in block 'InstructionMemory', is tied to its initial value (00011001001010110000000000011111).
WARNING:Xst:2935 - Signal 'imem<91>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001010010110100100000010000).
WARNING:Xst:2935 - Signal 'imem<92>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100110001100000000000000001).
WARNING:Xst:2935 - Signal 'imem<93>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000001011000).
WARNING:Xst:2935 - Signal 'imem<94>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011111110000000000000000).
WARNING:Xst:2935 - Signal 'imem<95>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001001111110010000000010000).
WARNING:Xst:2935 - Signal 'imem<96>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100000000011000000010100).
WARNING:Xst:2935 - Signal 'imem<97>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101000000011100000010100).
WARNING:Xst:2935 - Signal 'imem<98>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100001110011100000010010).
WARNING:Xst:2935 - Signal 'imem<99>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101001100011000000010010).
WARNING:Xst:2935 - Signal 'imem<100>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000110001110110000000010000).
WARNING:Xst:2935 - Signal 'imem<101>', unconnected in block 'InstructionMemory', is tied to its initial value (00001100100001110000000000011111).
WARNING:Xst:2935 - Signal 'imem<102>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000011000000010000).
WARNING:Xst:2935 - Signal 'imem<103>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000011000110100000010000).
WARNING:Xst:2935 - Signal 'imem<104>', unconnected in block 'InstructionMemory', is tied to its initial value (00101000110001110000000000000101).
WARNING:Xst:2935 - Signal 'imem<105>', unconnected in block 'InstructionMemory', is tied to its initial value (00010101101010100000000000000001).
WARNING:Xst:2935 - Signal 'imem<106>', unconnected in block 'InstructionMemory', is tied to its initial value (00011001101010110000000000011111).
WARNING:Xst:2935 - Signal 'imem<107>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001010010110110100000010000).
WARNING:Xst:2935 - Signal 'imem<108>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100110001100000000000000001).
WARNING:Xst:2935 - Signal 'imem<109>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000001101000).
WARNING:Xst:2935 - Signal 'imem<110>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011111110000000000000001).
WARNING:Xst:2935 - Signal 'imem<111>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001101111110010100000010000).
WARNING:Xst:2935 - Signal 'imem<112>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100011000110000000000000010).
WARNING:Xst:2935 - Signal 'imem<113>', unconnected in block 'InstructionMemory', is tied to its initial value (00101000011111100000000000000001).
WARNING:Xst:2935 - Signal 'imem<114>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000001010000).
WARNING:Xst:2935 - Signal 'imem<115>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000001000100000010000).
WARNING:Xst:2935 - Signal 'imem<116>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000001001000000010000).
WARNING:Xst:2935 - Signal 'imem<117>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000001001000100000010000).
WARNING:Xst:2935 - Signal 'imem<118>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000001011001000000010000).
WARNING:Xst:2935 - Signal 'imem<119>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000010000000010000).
WARNING:Xst:2935 - Signal 'imem<120>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000010100000010000).
WARNING:Xst:2935 - Signal 'imem<122>', unconnected in block 'InstructionMemory', is tied to its initial value (00010100100001000000000000010000).
WARNING:Xst:2935 - Signal 'imem<124>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100111010010000000010000).
WARNING:Xst:2935 - Signal 'imem<126>', unconnected in block 'InstructionMemory', is tied to its initial value (00010100101001010000000000010000).
WARNING:Xst:2935 - Signal 'imem<128>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101111010010100000010000).
WARNING:Xst:2935 - Signal 'imem<129>', unconnected in block 'InstructionMemory', is tied to its initial value (00000100000000110000000000011000).
WARNING:Xst:2935 - Signal 'imem<130>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011010000000000000000001).
WARNING:Xst:2935 - Signal 'imem<131>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101010000011100000010001).
WARNING:Xst:2935 - Signal 'imem<132>', unconnected in block 'InstructionMemory', is tied to its initial value (00001100100010010000000000011111).
WARNING:Xst:2935 - Signal 'imem<133>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000100000000010000).
WARNING:Xst:2935 - Signal 'imem<134>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000001110101100000010000).
WARNING:Xst:2935 - Signal 'imem<135>', unconnected in block 'InstructionMemory', is tied to its initial value (00101001000010010000000000000101).
WARNING:Xst:2935 - Signal 'imem<136>', unconnected in block 'InstructionMemory', is tied to its initial value (00011001011011000000000000000001).
WARNING:Xst:2935 - Signal 'imem<137>', unconnected in block 'InstructionMemory', is tied to its initial value (00010101011011010000000000011111).
WARNING:Xst:2935 - Signal 'imem<138>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001100011010101100000010000).
WARNING:Xst:2935 - Signal 'imem<139>', unconnected in block 'InstructionMemory', is tied to its initial value (00000101000010000000000000000001).
WARNING:Xst:2935 - Signal 'imem<140>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000010000111).
WARNING:Xst:2935 - Signal 'imem<141>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100000000100000000010100).
WARNING:Xst:2935 - Signal 'imem<142>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001011000000100100000010100).
WARNING:Xst:2935 - Signal 'imem<143>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100010010100100000010010).
WARNING:Xst:2935 - Signal 'imem<144>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001000010110100000000010010).
WARNING:Xst:2935 - Signal 'imem<145>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001000010010010100000010000).
WARNING:Xst:2935 - Signal 'imem<146>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011010000000000000000000).
WARNING:Xst:2935 - Signal 'imem<147>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100010000011000000010001).
WARNING:Xst:2935 - Signal 'imem<148>', unconnected in block 'InstructionMemory', is tied to its initial value (00001100101010010000000000011111).
WARNING:Xst:2935 - Signal 'imem<149>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000000000100000000010000).
WARNING:Xst:2935 - Signal 'imem<150>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000001100101000000010000).
WARNING:Xst:2935 - Signal 'imem<151>', unconnected in block 'InstructionMemory', is tied to its initial value (00101001000010010000000000000101).
WARNING:Xst:2935 - Signal 'imem<152>', unconnected in block 'InstructionMemory', is tied to its initial value (00011001010011000000000000000001).
WARNING:Xst:2935 - Signal 'imem<153>', unconnected in block 'InstructionMemory', is tied to its initial value (00010101010011010000000000011111).
WARNING:Xst:2935 - Signal 'imem<154>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001100011010101000000010000).
WARNING:Xst:2935 - Signal 'imem<155>', unconnected in block 'InstructionMemory', is tied to its initial value (00000101000010000000000000000001).
WARNING:Xst:2935 - Signal 'imem<156>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000010010111).
WARNING:Xst:2935 - Signal 'imem<157>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001010000000100000000010100).
WARNING:Xst:2935 - Signal 'imem<158>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101000000100100000010100).
WARNING:Xst:2935 - Signal 'imem<159>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001010010010100100000010010).
WARNING:Xst:2935 - Signal 'imem<160>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101010000100000000010010).
WARNING:Xst:2935 - Signal 'imem<161>', unconnected in block 'InstructionMemory', is tied to its initial value (00000001000010010010000000010000).
WARNING:Xst:2935 - Signal 'imem<162>', unconnected in block 'InstructionMemory', is tied to its initial value (00001000011000110000000000000010).
WARNING:Xst:2935 - Signal 'imem<163>', unconnected in block 'InstructionMemory', is tied to its initial value (00101000011000000000000000000001).
WARNING:Xst:2935 - Signal 'imem<164>', unconnected in block 'InstructionMemory', is tied to its initial value (00110000000000000000000010000010).
WARNING:Xst:2935 - Signal 'imem<165>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011010000000000000000001).
WARNING:Xst:2935 - Signal 'imem<166>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000101010000010100000010001).
WARNING:Xst:2935 - Signal 'imem<167>', unconnected in block 'InstructionMemory', is tied to its initial value (00011100011010000000000000000000).
WARNING:Xst:2935 - Signal 'imem<168>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000100010000010000000010001).
WARNING:Xst:2935 - Signal 'imem<169>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000001011100100000010000).
WARNING:Xst:2935 - Signal 'imem<170>', unconnected in block 'InstructionMemory', is tied to its initial value (00000000000001001100000000010000).
WARNING:Xst:2935 - Signal 'imem<171>', unconnected in block 'InstructionMemory', is tied to its initial value (11111100000000000000000000000000).
    Summary:
	inferred 127 Multiplexer(s).
Unit <InstructionMemory> synthesized.

Synthesizing Unit <ADDER>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\ADDER.vhd".
    Found 32-bit adder for signal <output> created at line 42.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <ADDER> synthesized.

Synthesizing Unit <MUX>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\MUX.vhd".
    Summary:
	inferred   1 Multiplexer(s).
Unit <MUX> synthesized.

Synthesizing Unit <control_unit>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\control_unit.vhd".
WARNING:Xst:647 - Input <func<5:3>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 6-bit comparator lessequal for signal <n0056> created at line 120
    Found 6-bit comparator lessequal for signal <n0058> created at line 122
    Summary:
	inferred   2 Comparator(s).
	inferred   6 Multiplexer(s).
Unit <control_unit> synthesized.

Synthesizing Unit <ALU>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\ALU.vhd".
    Found 32-bit adder for signal <A_input[31]_B_input[31]_add_5_OUT> created at line 71.
    Found 32-bit subtractor for signal <GND_46_o_GND_46_o_sub_7_OUT<31:0>> created at line 72.
    Found 32-bit shifter logical left for signal <A_input[31]_B_input[31]_shift_left_10_OUT> created at line 76
    Found 32-bit shifter logical right for signal <A_input[31]_B_input[31]_shift_right_11_OUT> created at line 77
    Found 32-bit 8-to-1 multiplexer for signal <ALU_output> created at line 70.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred   4 Multiplexer(s).
	inferred   2 Combinational logic shifter(s).
Unit <ALU> synthesized.

Synthesizing Unit <RegisterFile>.
    Related source file is "C:\NYU VHDL\NYU_6463_Processor\RegisterFile.vhd".
    Found 32-bit register for signal <regmem<1>>.
    Found 32-bit register for signal <regmem<2>>.
    Found 32-bit register for signal <regmem<3>>.
    Found 32-bit register for signal <regmem<4>>.
    Found 32-bit register for signal <regmem<5>>.
    Found 32-bit register for signal <regmem<6>>.
    Found 32-bit register for signal <regmem<7>>.
    Found 32-bit register for signal <regmem<8>>.
    Found 32-bit register for signal <regmem<9>>.
    Found 32-bit register for signal <regmem<10>>.
    Found 32-bit register for signal <regmem<11>>.
    Found 32-bit register for signal <regmem<12>>.
    Found 32-bit register for signal <regmem<13>>.
    Found 32-bit register for signal <regmem<14>>.
    Found 32-bit register for signal <regmem<15>>.
    Found 32-bit register for signal <regmem<16>>.
    Found 32-bit register for signal <regmem<17>>.
    Found 32-bit register for signal <regmem<18>>.
    Found 32-bit register for signal <regmem<19>>.
    Found 32-bit register for signal <regmem<20>>.
    Found 32-bit register for signal <regmem<21>>.
    Found 32-bit register for signal <regmem<22>>.
    Found 32-bit register for signal <regmem<23>>.
    Found 32-bit register for signal <regmem<24>>.
    Found 32-bit register for signal <regmem<25>>.
    Found 32-bit register for signal <regmem<26>>.
    Found 32-bit register for signal <regmem<27>>.
    Found 32-bit register for signal <regmem<28>>.
    Found 32-bit register for signal <regmem<29>>.
    Found 32-bit register for signal <regmem<30>>.
    Found 32-bit register for signal <regmem<31>>.
    Found 32-bit register for signal <regmem<0>>.
INFO:Xst:3019 - HDL ADVISOR - 1024 flip-flops were inferred for signal <regmem>. You may be trying to describe a RAM in a way that is incompatible with block and distributed RAM resources available on Xilinx devices, or with a specific template that is not supported. Please review the Xilinx resources documentation and the XST user manual for coding guidelines. Taking advantage of RAM resources will lead to improved device usage and reduced synthesis time.
INFO:Xst:3019 - HDL ADVISOR - 1024 flip-flops were inferred for signal <regmem>. You may be trying to describe a RAM in a way that is incompatible with block and distributed RAM resources available on Xilinx devices, or with a specific template that is not supported. Please review the Xilinx resources documentation and the XST user manual for coding guidelines. Taking advantage of RAM resources will lead to improved device usage and reduced synthesis time.
    Found 32-bit 32-to-1 multiplexer for signal <rdreg1[4]_regmem[31][31]_wide_mux_1_OUT> created at line 91.
    Found 32-bit 32-to-1 multiplexer for signal <rdreg2[4]_regmem[31][31]_wide_mux_4_OUT> created at line 95.
    Summary:
	inferred 1024 D-type flip-flop(s).
	inferred   4 Multiplexer(s).
Unit <RegisterFile> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 49
 16x8-bit single-port Read Only RAM                    : 48
 32x32-bit single-port RAM                             : 1
# Adders/Subtractors                                   : 8
 16-bit adder                                          : 1
 20-bit adder                                          : 1
 32-bit adder                                          : 3
 32-bit subtractor                                     : 1
 6-bit addsub                                          : 1
 7-bit addsub                                          : 1
# Registers                                            : 47
 1-bit register                                        : 6
 128-bit register                                      : 1
 16-bit register                                       : 1
 20-bit register                                       : 1
 32-bit register                                       : 33
 6-bit register                                        : 1
 64-bit register                                       : 1
 7-bit register                                        : 2
 8-bit register                                        : 1
# Latches                                              : 64
 1-bit latch                                           : 64
# Comparators                                          : 3
 20-bit comparator greater                             : 1
 6-bit comparator lessequal                            : 2
# Multiplexers                                         : 204
 1-bit 2-to-1 multiplexer                              : 4
 128-bit 2-to-1 multiplexer                            : 32
 3-bit 2-to-1 multiplexer                              : 6
 32-bit 2-to-1 multiplexer                             : 137
 32-bit 32-to-1 multiplexer                            : 2
 32-bit 8-to-1 multiplexer                             : 1
 5-bit 2-to-1 multiplexer                              : 1
 64-bit 2-to-1 multiplexer                             : 17
 7-bit 2-to-1 multiplexer                              : 3
 7-bit 4-to-1 multiplexer                              : 1
# Logic shifters                                       : 2
 32-bit shifter logical left                           : 1
 32-bit shifter logical right                          : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <DataMemory>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_datamem> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 32-word x 32-bit                    |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <wrtmemen>      | high     |
    |     addrA          | connected to signal <address>       |          |
    |     diA            | connected to signal <wrtdata>       |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
Unit <DataMemory> synthesized (advanced).

Synthesizing (advanced) Unit <cpufpga>.
The following registers are absorbed into counter <counter>: 1 register on signal <counter>.
The following registers are absorbed into counter <clk_de_counter>: 1 register on signal <clk_de_counter>.
The following registers are absorbed into accumulator <i>: 1 register on signal <i>.
The following registers are absorbed into accumulator <j>: 1 register on signal <j>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig32> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<127:124>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig1> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<3:0>>   |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig1>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig2> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<7:4>>   |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig2>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig3> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<11:8>>  |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig3>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig4> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<15:12>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig4>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig5> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<19:16>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig5>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig6> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<23:20>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig6>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig7> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<27:24>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig7>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig8> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<31:28>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig8>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig9> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<35:32>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig9>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig10> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<39:36>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig10>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig11> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<43:40>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig11>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig12> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<47:44>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig12>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig13> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<51:48>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig13>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig14> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<55:52>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig14>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig15> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<59:56>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig15>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig16> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<63:60>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <dig16>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig17> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<67:64>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig18> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<71:68>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig19> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<75:72>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig20> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<79:76>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig21> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<83:80>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig22> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<87:84>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig23> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<91:88>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig24> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<95:92>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig25> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<99:96>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig26> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<103:100>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig27> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<107:104>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig28> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<111:108>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig29> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<115:112>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig30> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<119:116>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_dig31> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input1<123:120>> |          |
    |     diA            | connected to signal <GND>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di16> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<63:60>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di16>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di1> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<3:0>>   |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di1>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di2> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<7:4>>   |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di2>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di3> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<11:8>>  |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di3>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di4> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<15:12>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di4>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di5> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<19:16>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di5>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di6> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<23:20>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di6>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di7> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<27:24>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di7>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di8> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<31:28>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di8>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di9> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<35:32>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di9>           |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di10> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<39:36>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di10>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di11> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<43:40>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di11>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di12> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<47:44>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di12>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di13> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<51:48>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di13>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di14> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<55:52>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di14>          |          |
    -----------------------------------------------------------------------
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_di15> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <input2<59:56>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <di15>          |          |
    -----------------------------------------------------------------------
Unit <cpufpga> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 49
 16x8-bit single-port distributed Read Only RAM        : 48
 32x32-bit single-port distributed RAM                 : 1
# Adders/Subtractors                                   : 4
 32-bit adder                                          : 3
 32-bit subtractor                                     : 1
# Counters                                             : 2
 16-bit up counter                                     : 1
 20-bit up counter                                     : 1
# Accumulators                                         : 2
 6-bit updown accumulator                              : 1
 7-bit updown accumulator                              : 1
# Registers                                            : 1269
 Flip-Flops                                            : 1269
# Comparators                                          : 3
 20-bit comparator greater                             : 1
 6-bit comparator lessequal                            : 2
# Multiplexers                                         : 266
 1-bit 2-to-1 multiplexer                              : 4
 1-bit 32-to-1 multiplexer                             : 64
 128-bit 2-to-1 multiplexer                            : 32
 3-bit 2-to-1 multiplexer                              : 6
 32-bit 2-to-1 multiplexer                             : 137
 32-bit 8-to-1 multiplexer                             : 1
 5-bit 2-to-1 multiplexer                              : 1
 64-bit 2-to-1 multiplexer                             : 17
 7-bit 2-to-1 multiplexer                              : 3
 7-bit 4-to-1 multiplexer                              : 1
# Logic shifters                                       : 2
 32-bit shifter logical left                           : 1
 32-bit shifter logical right                          : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================

Optimizing unit <Program_Counter> ...

Optimizing unit <cpufpga> ...
WARNING:Xst:1710 - FF/Latch <j_0> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1895 - Due to other FF/Latch trimming, FF/Latch <j_1> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1895 - Due to other FF/Latch trimming, FF/Latch <i_0> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1895 - Due to other FF/Latch trimming, FF/Latch <i_1> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.

Optimizing unit <cpu> ...

Optimizing unit <Instruction_Fetch> ...

Optimizing unit <InstructionMemory> ...

Optimizing unit <RegisterFile> ...

Optimizing unit <ALU> ...
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_31> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_30> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_29> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_28> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_27> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_26> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_25> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_24> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_23> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_22> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_21> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_20> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_19> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_18> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_17> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_16> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_15> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_14> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_13> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_12> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_11> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_10> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_9> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:2677 - Node <cpuall/InstrFetch/PC/output_8> of sequential type is unconnected in block <cpufpga>.
WARNING:Xst:1710 - FF/Latch <j_0> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1895 - Due to other FF/Latch trimming, FF/Latch <j_1> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1895 - Due to other FF/Latch trimming, FF/Latch <i_0> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.
WARNING:Xst:1895 - Due to other FF/Latch trimming, FF/Latch <i_1> (without init value) has a constant value of 0 in block <cpufpga>. This FF/Latch will be trimmed during the optimization process.

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block cpufpga, actual ratio is 5.
FlipFlop cpuall/InstrFetch/PC/output_1 has been replicated 1 time(s)
FlipFlop cpuall/InstrFetch/PC/output_3 has been replicated 1 time(s)
FlipFlop cpuall/InstrFetch/PC/output_6 has been replicated 1 time(s)

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 1293
 Flip-Flops                                            : 1293

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : cpufpga.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 3092
#      GND                         : 1
#      INV                         : 8
#      LUT1                        : 41
#      LUT2                        : 16
#      LUT3                        : 173
#      LUT4                        : 347
#      LUT5                        : 569
#      LUT6                        : 1642
#      MUXCY                       : 110
#      MUXF7                       : 68
#      VCC                         : 1
#      XORCY                       : 116
# FlipFlops/Latches                : 1357
#      FDC                         : 27
#      FDCE                        : 203
#      FDE                         : 1028
#      FDP                         : 8
#      FDPE                        : 7
#      FDRE                        : 20
#      LD                          : 64
# RAMS                             : 32
#      RAM32X1S                    : 32
# Clock Buffers                    : 3
#      BUFG                        : 2
#      BUFGP                       : 1
# IO Buffers                       : 51
#      IBUF                        : 19
#      OBUF                        : 32

Device utilization summary:
---------------------------

Selected Device : 7a100tcsg324-3 


Slice Logic Utilization: 
 Number of Slice Registers:            1357  out of  126800     1%  
 Number of Slice LUTs:                 2828  out of  63400     4%  
    Number used as Logic:              2796  out of  63400     4%  
    Number used as Memory:               32  out of  19000     0%  
       Number used as RAM:               32

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:   3759
   Number with an unused Flip Flop:    2402  out of   3759    63%  
   Number with an unused LUT:           931  out of   3759    24%  
   Number of fully used LUT-FF pairs:   426  out of   3759    11%  
   Number of unique control sets:        43

IO Utilization: 
 Number of IOs:                          54
 Number of bonded IOBs:                  52  out of    210    24%  

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                3  out of     32     9%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 1120  |
clk_de                             | BUFG                   | 205   |
d_vld(cpuall/data_vld<31>6:O)      | BUFG(*)(output_63)     | 64    |
-----------------------------------+------------------------+-------+
(*) This 1 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -3

   Minimum period: 8.038ns (Maximum Frequency: 124.414MHz)
   Minimum input arrival time before clock: 3.942ns
   Maximum output required time after clock: 0.750ns
   Maximum combinational path delay: 0.393ns

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 8.038ns (frequency: 124.414MHz)
  Total number of paths / destination ports: 827799396 / 2365
-------------------------------------------------------------------------
Delay:               8.038ns (Levels of Logic = 15)
  Source:            cpuall/InstrFetch/PC/output_6 (FF)
  Destination:       cpuall/InstrFetch/PC/output_7 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: cpuall/InstrFetch/PC/output_6 to cpuall/InstrFetch/PC/output_7
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q            173   0.361   0.822  cpuall/InstrFetch/PC/output_6 (cpuall/InstrFetch/PC/output_6)
     LUT6:I0->O            1   0.097   0.000  cpuall/InstrFetch/InstrMem/Instruction<16>10_F (N462)
     MUXF7:I0->O           1   0.277   0.295  cpuall/InstrFetch/InstrMem/Instruction<16>10 (cpuall/InstrFetch/InstrMem/Instruction<16>9)
     LUT6:I5->O          259   0.097   0.437  cpuall/InstrFetch/InstrMem/Instruction<16>11 (cpuall/instr<16>)
     LUT6:I5->O            1   0.097   0.556  cpuall/RegFile/mux43_81 (cpuall/RegFile/mux43_81)
     LUT6:I2->O            2   0.097   0.384  cpuall/RegFile/mux43_3 (cpuall/RegFile/mux43_3)
     LUT6:I4->O           60   0.097   0.804  cpuall/ALUMAIN/Mmux_B_input121 (cpuall/ALUMAIN/B_input<1>)
     LUT6:I0->O            4   0.097   0.525  cpuall/ALUMAIN/Sh131 (cpuall/ALUMAIN/Sh13)
     LUT6:I3->O            2   0.097   0.299  cpuall/ALUMAIN/Sh451 (cpuall/ALUMAIN/Sh45)
     LUT6:I5->O            2   0.097   0.515  cpuall/ALUMAIN/Mmux_ALU_output225 (cpuall/ALUMAIN/Mmux_ALU_output224)
     LUT6:I3->O            1   0.097   0.295  cpuall/ALUMAIN/Mmux_ALU_output227_SW0 (N227)
     LUT5:I4->O            1   0.097   0.295  cpuall/ALUMAIN/Mmux_ALU_output217_SW0 (N241)
     LUT6:I5->O            8   0.097   0.327  cpuall/ALUMAIN/zero1 (cpuall/ALUMAIN/zero)
     LUT6:I5->O            1   0.097   0.000  cpuall/ALUMAIN/zero8_SW1_G (N369)
     MUXF7:I1->O           1   0.279   0.295  cpuall/ALUMAIN/zero8_SW1 (N253)
     LUT6:I5->O            1   0.097   0.000  cpuall/InstrFetch/nextpcMUX/Mmux_output2 (cpuall/InstrFetch/next_pc<0>)
     FDC:D                     0.008          cpuall/InstrFetch/PC/output_0
    ----------------------------------------
    Total                      8.038ns (2.186ns logic, 5.852ns route)
                                       (27.2% logic, 72.8% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk_de'
  Clock period: 4.080ns (frequency: 245.101MHz)
  Total number of paths / destination ports: 5651 / 210
-------------------------------------------------------------------------
Delay:               4.080ns (Levels of Logic = 5)
  Source:            i_6 (FF)
  Destination:       input1_112 (FF)
  Source Clock:      clk_de rising
  Destination Clock: clk_de rising

  Data Path: i_6 to input1_112
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDCE:C->Q            71   0.361   0.796  i_6 (i_6)
     LUT5:I0->O            8   0.097   0.715  Mmux_i[6]_GND_5_o_wide_mux_21_OUT10311 (Mmux_i[6]_GND_5_o_wide_mux_21_OUT1031)
     LUT5:I0->O           27   0.097   0.662  Mmux_i[6]_GND_5_o_wide_mux_21_OUT70111 (Mmux_i[6]_GND_5_o_wide_mux_21_OUT7011)
     LUT6:I2->O           14   0.097   0.743  Mmux_i[6]_GND_5_o_wide_mux_21_OUT10521 (Mmux_i[6]_GND_5_o_wide_mux_21_OUT1052)
     LUT6:I1->O            4   0.097   0.309  Mmux_i[6]_GND_5_o_wide_mux_21_OUT10531 (Mmux_i[6]_GND_5_o_wide_mux_21_OUT1053)
     LUT4:I3->O            1   0.097   0.000  Mmux_i[6]_GND_5_o_wide_mux_21_OUT1051 (i[6]_GND_5_o_wide_mux_21_OUT<112>)
     FDCE:D                    0.008          input1_112
    ----------------------------------------
    Total                      4.080ns (0.854ns logic, 3.226ns route)
                                       (20.9% logic, 79.1% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 424 / 103
-------------------------------------------------------------------------
Offset:              3.942ns (Levels of Logic = 8)
  Source:            sw<3> (PAD)
  Destination:       seg_5 (FF)
  Destination Clock: clk rising

  Data Path: sw<3> to seg_5
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            15   0.001   0.444  sw_3_IBUF (led_3_OBUF)
     LUT2:I0->O           35   0.097   0.801  displaybit[1]_GND_5_o_equal_174_o<1>1 (displaybit[1]_GND_5_o_equal_174_o)
     LUT6:I0->O            1   0.097   0.000  PWR_5_o_PWR_5_o_mux_198_OUT<5>56_F (N454)
     MUXF7:I0->O           1   0.277   0.683  PWR_5_o_PWR_5_o_mux_198_OUT<5>56 (PWR_5_o_PWR_5_o_mux_198_OUT<5>56)
     LUT6:I1->O            1   0.097   0.556  PWR_5_o_PWR_5_o_mux_198_OUT<5>61 (PWR_5_o_PWR_5_o_mux_198_OUT<5>61)
     LUT6:I2->O            1   0.097   0.295  PWR_5_o_PWR_5_o_mux_198_OUT<5>65 (PWR_5_o_PWR_5_o_mux_198_OUT<5>65)
     LUT5:I4->O            1   0.097   0.295  PWR_5_o_PWR_5_o_mux_198_OUT<5>76 (PWR_5_o_PWR_5_o_mux_198_OUT<5>76)
     LUT6:I5->O            1   0.097   0.000  PWR_5_o_PWR_5_o_mux_198_OUT<5>77 (PWR_5_o_PWR_5_o_mux_198_OUT<5>)
     FDP:D                     0.008          seg_5
    ----------------------------------------
    Total                      3.942ns (0.868ns logic, 3.074ns route)
                                       (22.0% logic, 78.0% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk_de'
  Total number of paths / destination ports: 632 / 609
-------------------------------------------------------------------------
Offset:              1.493ns (Levels of Logic = 3)
  Source:            btnL (PAD)
  Destination:       i_6 (FF)
  Destination Clock: clk_de rising

  Data Path: btnL to i_6
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            12   0.001   0.734  btnL_IBUF (btnL_IBUF)
     LUT5:I0->O            1   0.097   0.556  Maccum_i_cy<5>11 (Maccum_i_cy<5>1)
     LUT5:I1->O            1   0.097   0.000  Maccum_i_xor<6>11 (Result<6>2)
     FDCE:D                    0.008          i_6
    ----------------------------------------
    Total                      1.493ns (0.203ns logic, 1.290ns route)
                                       (13.6% logic, 86.4% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'd_vld'
  Total number of paths / destination ports: 64 / 64
-------------------------------------------------------------------------
Offset:              0.721ns (Levels of Logic = 2)
  Source:            sw<0> (PAD)
  Destination:       output_63 (LATCH)
  Destination Clock: d_vld falling

  Data Path: sw<0> to output_63
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            65   0.001   0.623  sw_0_IBUF (led_0_OBUF)
     LUT3:I0->O            1   0.097   0.000  cpuall/Mmux_dout110 (output1<0>)
     LD:D                     -0.028          output_0
    ----------------------------------------
    Total                      0.721ns (0.098ns logic, 0.623ns route)
                                       (13.6% logic, 86.4% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 16 / 16
-------------------------------------------------------------------------
Offset:              0.750ns (Levels of Logic = 1)
  Source:            an_sig_3 (FF)
  Destination:       an<3> (PAD)
  Source Clock:      clk rising

  Data Path: an_sig_3 to an<3>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDPE:C->Q            54   0.361   0.389  an_sig_3 (an_sig_3)
     OBUF:I->O                 0.000          an_3_OBUF (an<3>)
    ----------------------------------------
    Total                      0.750ns (0.361ns logic, 0.389ns route)
                                       (48.1% logic, 51.9% route)

=========================================================================
Timing constraint: Default path analysis
  Total number of paths / destination ports: 16 / 16
-------------------------------------------------------------------------
Delay:               0.393ns (Levels of Logic = 2)
  Source:            sw<1> (PAD)
  Destination:       led<1> (PAD)

  Data Path: sw<1> to led<1>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            70   0.001   0.392  sw_1_IBUF (led_1_OBUF)
     OBUF:I->O                 0.000          led_1_OBUF (led<1>)
    ----------------------------------------
    Total                      0.393ns (0.001ns logic, 0.392ns route)
                                       (0.3% logic, 99.7% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock clk
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |    8.038|         |         |         |
clk_de         |    7.628|         |         |         |
d_vld          |         |    4.506|         |         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock clk_de
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk_de         |    4.080|         |         |         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock d_vld
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    0.847|         |
---------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 73.00 secs
Total CPU time to Xst completion: 72.86 secs
 
--> 

Total memory usage is 364708 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :  260 (   0 filtered)
Number of infos    :   55 (   0 filtered)

